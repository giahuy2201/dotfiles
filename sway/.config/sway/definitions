### Variables

# Logo key. Use Mod1 for Alt and Mod4 for Super.
set $mod Mod4
set $alt_mod Mod1

# Direction keys
set $left h
set $down j
set $up k
set $right l

# Add --to-code to bindsym, support for non-latin layouts
set $bindsym bindsym --to-code

# For user's convenience, the same for unbindsym
set $unbindsym unbindsym --to-code

# wallpaper
set $wallpaper '$XDG_PICTURES_DIR/wallpapers/galen-crout-175291.jpg'

# Your preferred terminal emulator
set $term foot
set $term_float footclient --app-id floating_shell --window-size-chars 82x25

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu wofi --show run

# brightness control
set $brightness $XDG_CONFIG_HOME/sway/scripts/brightness.sh
set $brightness_up $brightness up
set $brightness_down $brightness down

# audio control
set $sink_volume pactl get-sink-volume @DEFAULT_SINK@ | grep '^Volume:' | cut -d / -f 2 | tr -d ' ' | sed 's/%//'
set $source_volume pactl get-source-volume @DEFAULT_SOURCE@ | grep '^Volume:' | cut -d / -f 2 | tr -d ' ' | sed 's/%//'
set $volume_down $(pactl set-sink-volume @DEFAULT_SINK@ -5% && $sink_volume)
set $volume_up $(pactl set-sink-volume @DEFAULT_SINK@ +5% && $sink_volume)
set $volume_mute $(pactl set-sink-mute @DEFAULT_SINK@ toggle && pactl get-sink-mute @DEFAULT_SINK@ | sed -En "/no/ s/.*/$($sink_volume)/p; /yes/ s/.*/0/p")
set $mic_mute $(pactl set-source-mute @DEFAULT_SOURCE@ toggle && pactl get-source-mute @DEFAULT_SOURCE@ | sed -En "/no/ s/.*/$($source_volume)/p; /yes/ s/.*/0/p")

# bluetooth menu
set $bluetooth $term_float bluetuith

### Lockscreen configuration
set $locking swaylock --daemonize --color "$selection-color" --inside-color "$selection-color" --inside-clear-color "$text-color" --ring-color "$color2" --ring-clear-color "$color11" --ring-ver-color "$color13" --show-failed-attempts --fade-in 0.2 --grace 2 --effect-vignette 0.5:0.5 --effect-blur 7x5 --ignore-empty-password --screenshots --clock

### Idle configuration
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
set $idle_timeout 240
set $locking_timeout 300
set $screen_timeout 600
set $sleep_timeout 900
set $sleep_delay 2

set $swayidle swayidle -w \
    timeout $idle_timeout 'light -G > /tmp/brightness && light -S 10' resume 'light -S $([ -f /tmp/brightness ] && cat /tmp/brightness || echo 100%)' \
    timeout $locking_timeout 'exec $locking' \
    timeout $screen_timeout 'swaymsg "output * dpms off"' \
    resume 'swaymsg "output * dpms on"' \
    timeout $sleep_timeout 'swaymsg "output * dpms on"; sleep $sleep_delay; systemctl suspend' \
    before-sleep 'playerctl pause' \
    before-sleep 'exec $locking & sleep $sleep_delay'

# statusbar command
set $statusbar waybar
set $waybar_position top

# calendar application
set $calendar $term_float calcurse

# workspace names
set $ws1 number 1
set $ws2 number 2
set $ws3 number 3
set $ws4 number 4
set $ws5 number 5
set $ws6 number 6
set $ws7 number 7
set $ws8 number 8
set $ws9 number 9
set $ws10 number 10

# screenshot 
set $grimshot $XDG_CONFIG_HOME/sway/scripts/grimshot.sh
set $pipe_output $grimshot save output -
set $pipe_selection $grimshot save window -
set $notify_paste  [[ $(wl-paste -l) == "image/png" ]] && notify-send "Screenshot copied to clipboard"
set $swappy swappy -f -
set $swappy_pipe swappy -f - -o -
set $upload_pipe curl -s -F "file=@-;filename=.png" https://x0.at/ | tee >(wl-copy) >(xargs notify-send)

set $screenshot_screen $pipe_output | $swappy && $notify_paste
set $screenshot_screen_upload $pipe_output | $swappy_pipe | $upload_pipe 

set $screenshot_selection $pipe_selection | $swappy && $notify_paste
set $screenshot_selection_upload $pipe_selection | $swappy_pipe | $upload_pipe

# autostarts
set $foot_server '[ -x "$(command -v foot)" ] && $XDG_CONFIG_HOME/sway/scripts/foot.sh --server'
set $workspace_icons '[ -x "$(command -v sworkstyle)" ] && sworkstyle -d -l info &> /tmp/sworkstyle.log'
set $mounting_daemon '[ -x "$(command -v pcmanfm)" ] && pcmanfm -d'
# restart kanshi https://github.com/emersion/kanshi/issues/43#issuecomment-531679213
set $kanshi '[ -x "$(command -v kanshi)" ] && pkill kanshi; exec kanshi'
set $xdg-dirs '[ -x "$(command -v xdg-user-dirs-update)" ] && exec xdg-user-dirs-update'
# apply the keyboard layout from localectl if no keyboard layout has been set via config.d

# daemons
set $swappy_notify '[ -x "$(command -v swappy)" ] && $XDG_CONFIG_HOME/sway/scripts/screenshot-notify.sh'
set $swayr_daemon '[ -x "$(command -v swayrd)" ] && pkill swayrd; RUST_BACKTRACE=1 RUST_LOG=swayr=debug swayrd &> /tmp/swayrd.log'
set $cliphist_watch '[ -x "$(command -v wl-paste)" ] && [ -x "$(command -v cliphist)" ] && wl-paste --watch pkill -RTMIN+9 waybar'
set $cliphist_store '[ -x "$(command -v wl-paste)" ] && [ -x "$(command -v cliphist)" ] && wl-paste --watch cliphist store'
set $calendar_daemon 'calcurse --daemon'
set $nm_applet '[ -x "$(command -v nm-applet)" ] && nm-applet'